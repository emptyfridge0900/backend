name: Build and Deploy to Fly.io

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read 
    steps:
      - uses: actions/checkout@v4

      # Set up .NET Core
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      # Define output directory
      - name: Set output directory
        run: echo "OUTPUT_DIR=$GITHUB_WORKSPACE/myapp" >> $GITHUB_ENV

      # Build and publish .NET app
      - name: Build with dotnet
        working-directory: ./Book.Server
        run: |
          dotnet build --configuration Release
          echo "Build completed"
      - name: Publish .NET app
        working-directory: ./Book.Server
        run: |
          mkdir -p "$OUTPUT_DIR"
          dotnet publish -c Release -o "$OUTPUT_DIR"
          ls -lR "$OUTPUT_DIR"  # Debug: Verify .NET output

      # Set up Node.js
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      # Build React Frontend
      - name: Build React Frontend
        working-directory: ./book.client
        run: |
          npm install
          npm run build -- --outDir "$OUTPUT_DIR/wwwroot"
          ls -lR "$OUTPUT_DIR/wwwroot"  # Debug: Verify React output

      # Debug: Verify myapp contents
      - name: Check myapp contents
        run: |
          ls -lR ./myapp
          if [ ! -d "./myapp" ]; then echo "Error: myapp directory not found"; exit 1; fi

      # Upload artifact
      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: fly-app
          path: ./myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: fly-app
          path: ./myapp

      - name: Prepare for Fly.io Deploy
        run: |
          mv myapp/* .
          ls -l

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}